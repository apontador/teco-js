/*global jQuery, jasmine, APT */
describe("APT.pageObj.user", function () {
    'use strict';

    var user_data = {
            "id": 9909,
            "logged": true,
            "profilePhoto": {
                "small": "small.png",
                "medium": "medium.png",
                "big": "big.png"
            }
        },
        cookie_data = btoa(JSON.stringify(user_data)),
        production_server_cookie = "eyJpZCI6IjQ2NjM0NTg0MDQiLCJuYW1lIjoiUnl1IiwicGFzc3dvcmQiOiIiLCJlbWFpbCI6InJ5dUBleGFtcGxlLmNvbSIsInRva2VuIjoiNDY2MzQ1ODQwNCIsIm9hdXRoX3Rva2VuIjpudWxsLCJ0b2tlbl9zZWNyZXQiOm51bGwsIm9hdXRoX3Rva2VuX3NlY3JldCI6bnVsbCwic2lnbmF0dXJlIjpudWxsLCJnZW5kZXIiOiIiLCJiaXJ0aERheSI6IiIsInRvdGFsQ29tbWVudHMiOm51bGwsInNvY2lhbE5ldHdvcmtJZCI6bnVsbCwic29jaWFsTmV0d29yayI6bnVsbCwidHdpdHRlcklkIjpudWxsLCJzZXJ2aWNlcyI6WyJDQVRFR09SWSIsIkxPQ0FMUEhPVE8iLCJQUk9GSUxFIiwiTE9DQUwiLCJDT01NRU5UIiwiQ0lUWSIsIlNFTkRNQUlMIiwiUEhPVE8iXSwidXNlclN1bW1hcnkiOnsiY29tbWVudHMiOjAsInBob3RvcyI6MCwicGxhY2VzIjowLCJmb2xsb3dpbmciOjAsImZvbGxvd2VycyI6MCwibWVtYmVyU2luY2UiOiIxOFwvMTFcLzIwMTEiLCJwbGFjZXNDbGFpbWVkIjowLCJwbGFjZXNJbnNlcnRlZCI6MCwiY2hlY2tpbnMiOjB9LCJwcm9maWxlIjp7ImFkZHJlc3MiOnsic3RhdGUiOm51bGwsInN0cmVldCI6bnVsbCwibnVtYmVyIjpudWxsLCJzdHJlZXRJZCI6bnVsbCwiY291bnR5IjpudWxsLCJjb3VudHJ5IjpudWxsLCJyZWdpb24iOm51bGwsImNvbXBsZW1lbnQiOm51bGwsInBvc3RhbENvZGUiOnsiY29kZSI6bnVsbH0sImNvb3JkaW5hdGVzIjp7IngiOiIwLjAiLCJ5IjoiMC4wIiwicmFkaXVzIjoiMTAwMCJ9LCJjaXR5Ijp7ImlkIjpudWxsLCJuYW1lIjpudWxsLCJkZXNjcmlwdGlvbiI6bnVsbH19LCJjZWxsTnVtYmVyIjp7ImFyZWFDb2RlIjpudWxsLCJjb3VudHJ5Q29kZSI6bnVsbCwibnVtYmVyIjpudWxsfSwiYWJvdXQiOm51bGwsIm5ld3NsZXR0ZXIiOmZhbHNlLCJyZWxhdGlvbnNoaXAiOjAsInNob3dQaG9uZSI6bnVsbCwidHdpdHRlclVybCI6bnVsbCwiZmFjZWJvb2tVcmwiOm51bGwsIm9ya3V0VXJsIjpudWxsLCJibG9nVXJsIjpudWxsLCJwcm9maWxlUGhvdG8iOnsiYmlnIjpudWxsLCJtZWRpdW0iOm51bGwsIm9yaWdpbmFsIjpudWxsLCJzbWFsbCI6bnVsbH19LCJ2ZXJzaW9uIjoxfQ";

    afterEach(function () {
        delete window.COOKIE_PREFIX;
    });

    it("should start logged out", function () {
        expect(APT.pageObj.logged).toBeFalsy();
    });

    it("should be logged in when the loggedApt cookie exists", function () {
        spyOn(jQuery, "cookie").andReturn(cookie_data);

        APT.pageObj.load();

        expect(APT.pageObj.user.logged).toBeTruthy();
    });

    it("should read the global COOKIE_PREFIX", function () {
        window.COOKIE_PREFIX = "test_";
        spyOn(jQuery, "cookie").andReturn(cookie_data);

        APT.pageObj.load();

        expect(jQuery.cookie).toHaveBeenCalledWith("test_loggedApt");
    });

    it("should parse the cookie to get the user data", function () {
        spyOn(jQuery, "cookie").andReturn(cookie_data);

        APT.pageObj.load();

        expect(APT.pageObj.user.id).toEqual(user_data.id);
        expect(APT.pageObj.user.logged).toEqual(user_data.logged);
        expect(APT.pageObj.user.profilePhoto).toEqual(user_data.profilePhoto);
    });

    it("should not break when the cookie doesn't exists", function () {
        spyOn(jQuery, "cookie").andReturn(null);

        expect(function () {
            APT.pageObj.load();
        }).not.toThrow(
            jasmine.any(Object)
        );

        expect(APT.pageObj.user.id).toEqual(0);
    });

    it("should accept an error callback to be triggered when the cookie parsing fail", function () {
        var errorCallbackSpy = jasmine.createSpy("error callback spy");
        spyOn(jQuery, "cookie").andReturn("malformated {value}");

        APT.pageObj.load(errorCallbackSpy);

        expect(errorCallbackSpy).toHaveBeenCalledWith(jasmine.any(Object));
    });

    it("should parse a cookie from generated by the server", function () {
        spyOn(jQuery, "cookie").andReturn(production_server_cookie);

        APT.pageObj.load();

        expect(APT.pageObj.user.logged).toEqual(true);
        expect(APT.pageObj.user.id).toEqual("4663458404");
        expect(APT.pageObj.user.profilePhoto).toBeDefined();
    });

    it("should fill the deafult profile photo with the placeholder icons", function () {
        spyOn(jQuery, "cookie").andReturn(null);

        APT.pageObj.load();

        expect(APT.pageObj.user.profilePhoto).toEqual({
            "small": "/apontador_v8/images/accounts/user48.gif",
            "medium": "/apontador_v8/images/accounts/user64.gif",
            "big": "/apontador_v8/images/accounts/user200.gif"
        });
    });
});
